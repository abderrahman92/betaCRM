{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","services/auth.service.js","services/auth-header.js","services/user.service.js","common/EventBus.js","assets/images/sofitech.png","assets/images/logo-cemeca.png","services/role.js","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","pages/Customers.jsx","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","services/Action.js","pages/Dashboard.jsx","common/Register/checkedForm.js","pages/Register.jsx","pages/Login.jsx","pages/Action.jsx","services/societe.js","common/Ajouter/checkedForm.js","pages/Ajouter.jsx","services/Interlocuteur.js","pages/Interlocuteur.jsx","pages/CustomerInfo.jsx","components/routes.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","API_URL","username","password","axios","post","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","message","get","delete","id","email","roles","parse","getItem","authHeader","user","headers","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","SidebarItedes","props","desactive","className","disabled","icon","title","status","SidebarIteact","active","logOut","AuthService","logout","Sidebar","useState","sidebar_items","new_sidbar","setSidbar","undefined","currentUser","setCurrentUser","setadminstate","roleAuth","setRoleAuth","cemeca","setcemeca","getCurrentUser","retrieveRole","UserService","getCemecaBoard","error","content","toString","console","log","useEffect","nouveaustate","getAdminBoard","EventBus","activeItem","findIndex","item","route","location","pathname","desaItem","filter","task","actItem","src","logoCemeca","alt","logo","map","index","to","display_name","href","onClick","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","current","contains","target","classList","toggle","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","currMode","setcurrMode","currColor","setcurrColor","useDispatch","themeClass","find","colorClass","add","ThemeAction","useStyles","makeStyles","theme","table","secondary","light","main","dark","contrastText","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","sx","fontWeight","backgroundColor","palette","primary","getContrastText","avatar","fontSize","display","Customers","classes","React","page","rowsPerPage","ListTest","SetTest","searchAll","setSearchAll","getSofitechBoard","placeholder","value","onChange","nom","val","nom_soc","toLowerCase","includes","code_postal","String","siret","siren","length","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","row","Grid","container","lg","Typography","variant","adresse_local","ville","ville_soc","nom_responsable_soc","activite_soc","syndicat","Fab","TableFooter","curr_user","Topnav","image","user_menu","renderUserMenu","notifications","renderNotificationItem","StatusCard","count","chartOptions","series","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","AuthAction","findAll","Dashboard","SetIscemeca","Action","SetAction","catch","Action_util","id_utili","statusCards","themeReducer","useSelector","height","minWidth","align","border","scope","observation","createdAt","required","role","vemail","isEmail","vrole","isNaN","vusername","vpassword","Register","padding","listuser","setListeUser","listauth","setListeAuth","listauthRef","form","checkBtn","checkForm","setUsername","setEmail","setRoles","setPassword","successful","setSuccessful","setMessage","retrieveTutorials","retrieveUsers","getListe_User","get_historique_auth","setPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","onChangeRoles","Avatar","company","style","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","date_connection","onSubmit","preventDefault","validateAll","context","_errors","register","resMessage","htmlFor","validations","Login","history","useHistory","loading","setLoading","login","push","window","reload","create_historique_auth","ID_societe","setID_societe","ListeAction","listeActUser","params","useParams","nb","parseInt","initial1ctionState","nom_interlocuteur","type_action","nom_societe","description","date_action","date_rdv","setAction","handleInputChange","Date","create","FormControl","fullWidth","m","TextField","label","multiline","rows","InputLabel","Select","labelId","MenuItem","AuthSociete","findByTitle","vsiret","vsiren","vnom_soc","vnom_responsable","vdate_creation_soc","vactivité","vadresse","vpays","cville","vcode_postal","vopportunité","vobservation","vtel","vid_role","AddTutorial","vsyndicat","initialSocieteState","date_creation_soc","pays","tel","app_sofitech","app_cemeca","soc_sofitech","soc_cemeca","id_role","Societe","setSociete","myJSON","setactive","API_INSEE_SIRET","b","chaine","SIRETAPI","setSIRETAPI","etablissements","join","date","activite_principale","defaultValue","displayValue","groupBy","isObject","selectedValues","onNOMPressFn","onRemove","onSearch","onSelect","Array","isArray","x","NOM","TYPE","showCheckbox","initialState","prenom","adresse","code_postale","activite","id_soc","Interlocuteur","setInterlocuteur","listeinter","Setlisteinter","fonction_inter","Customersinfo","ListSociete","SetSociete","listInter","SetInter","interService","card","Fragment","CardContent","gutterBottom","mb","CardActions","Button","size","Box","Card","Routes","path","exact","CustomerInfo","Ajouter","Layout","render","TopNav","store","createStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4db63c81.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  create_historique_auth(username,password,message){\n    return axios.post(API_URL + \"historique\", {\n      username,\n      password,\n      message\n      \n    });\n\n  }\n    get_historique_auth(){\n    return axios.get(API_URL + \"list_historique\");\n\n  };\n  removeAll_historique_auth () {\n    return axios.delete(API_URL +`list_historique`);\n  };\n  remove_historiqueremove(id) {\n    return axios.delete(API_URL +`list_historique/${id}`);\n  };\n\n  register(username, email,roles, password,) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      roles,\n      password,\n      \n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getListe_User() {\n    return axios.get(API_URL + 'liste_user');\n  }\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getCemecaBoard() {\n    return axios.get(API_URL + 'cemeca', { headers: authHeader() });\n  }\n  getSofitechBoard() {\n    return axios.get(API_URL + 'sofitech', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","export default __webpack_public_path__ + \"static/media/sofitech.28261e02.png\";","export default __webpack_public_path__ + \"static/media/logo-cemeca.d528d253.png\";","import axios from \"axios\";\n\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\n\n\nclass AuthRole {\n\n \n\n  findAll(){\n    return axios.get(API_URL + \"role\");\n\n  };\n \n\n \n}\n\nexport default new AuthRole();\n","import React, { useEffect, useState } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport AuthService from \"../../services/auth.service\";\n\nimport UserService from \"../../services/user.service\";\n\nimport EventBus from \"../../common/EventBus\"\n\nimport logo from '../../assets/images/sofitech.png'\n\nimport logoCemeca from '../../assets/images/logo-cemeca.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nimport Role from '../../services/role'\n\nimport axios from \"axios\";\nimport role from '../../services/role';\n \n//sidabr desactivation parametres\nconst SidebarItedes = props => {\n\n    const desactive = props.desactive ? '' : 'desactive';\n\n    return (\n        <div  className=\"sidebar__item\">\n            <div disabled  className={`sidebar__item-inner ${desactive}`}>\n                <i className={props.icon}></i>\n                <span >\n                    {props.title}\n                    {props.status}\n                </span>           \n            </div>  \n        </div>  \n    )\n}\n//sidabr activation parametres\nconst SidebarIteact = props => {\n\n    const active = props.active ? 'active' : '';\n\n    return (\n        <div disabled className=\"sidebar__item\">\n            <div  disabled  className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span >\n                    {props.title}\n                    {props.status}\n                </span>                \n            </div>\n        </div>\n        \n    )\n}\nconst logOut = () => {\n    AuthService.logout();\n  };\nconst Sidebar = props => {\n\n    const active = props.active ? 'active' : '';\n    const [new_sidbar,setSidbar]=useState(sidebar_items);\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const [adminstate, setadminstate] = useState(undefined);\n    const [roleAuth,setRoleAuth] = useState([]);\n    const [cemeca,setcemeca] = useState(undefined);\n\n\n    // GET USER \n    const user = AuthService.getCurrentUser()\n    //GET ROLE \n    const retrieveRole = () => {\n\n        if(user){\n            UserService.getCemecaBoard().then(\n                response => {\n                   setcemeca(true)\n                    setRoleAuth(response.data);\n                },\n                error => {\n                    setcemeca(false)\n                    setRoleAuth({\n                    content:\n                      (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                      error.message ||\n                      error.toString()\n                  });\n                }\n              );\n           \n        \n        \n    \n    \n      }\n      }; \n      \n      console.log(roleAuth) \n    //FILTER USER WHERE ROLE\n   \n     useEffect(()=>{ \n        const user = AuthService.getCurrentUser()\n            if (user){\n                retrieveRole();\n                const nouveaustate = [...new_sidbar]\n                UserService.getAdminBoard().then(\n                    response => {\n                        nouveaustate[7].status = \"desactive\"\n                        nouveaustate[2].status = \"active\"\n                        nouveaustate[8].status = \"active\"\n                        setadminstate({\n                        content: response.data\n                        \n                      });\n                    },\n                    error => {\n                        setadminstate({\n                        content:\n                          (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                          error.message ||\n                          error.toString()\n                      });\n              \n                      if (error.response && error.response.status === 401) {\n                        EventBus.dispatch(\"logout\");\n                      }\n                    }\n                  );\n                nouveaustate[7].status = \"desactive\"\n                nouveaustate[0].status = \"active\"\n                nouveaustate[2].status = \"active\"\n                nouveaustate[1].status = \"active\"\n                setSidbar(nouveaustate) \n                setCurrentUser(user) \n            }\n     },[]) \n\n \n    const activeItem = new_sidbar.findIndex(item => item.route === props.location.pathname)\n      //login desactiver\n      const desaItem =new_sidbar.filter(task=>task.status===\"desactive\")\n      const actItem =new_sidbar.filter(task=>task.status===\"active\")\n\n      console.log(new_sidbar)\n      console.log(actItem)\n     const renderElement = () =>{\n      if (cemeca === true){\n          return <img  src={logoCemeca} alt=\"company logo\" />\n      }\n      else\n      return <img  src={logo} alt=\"company logo\" />\n     }\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                {renderElement()}\n\n            </div>\n            {\n                actItem.map((item, index) => (\n                    <Link  to={item.route} key={index}>\n                       \n                        <SidebarIteact\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                           \n                        />\n                    </Link>\n                ))\n            },\n         ,{currentUser ?(\n                <div>\n                    {\n                        desaItem.map((item, index) => (\n                                <SidebarItedes\n                                    title={item.display_name}\n                                    icon={item.icon}\n                                    active={index === activeItem}\n                                \n                                />\n                        )) \n                    }\n                    <div  className=\"sidebar__item\">\n                        <div  className={`sidebar__item-inner${active}`}>\n                        <i className='bx bxs-log-out'></i>\n                            <a href=\"/login\" className=\"nav-link\" onClick={logOut}>Déconnexion</a>\n                        </div>\n                    \n                    </div>\n                \n                </div> \n                \n                \n              ): (\n                <div  className=\"sidebar__item\">\n                  \n                    \n                </div>\n              )}\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useRef} from 'react'\n\nimport './dropdown.css'\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst Dropdown = props => {\n\n    const dropdown_toggle_el = useRef(null)\n    const dropdown_content_el = useRef(null)\n\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n    \n    return (\n        <div className='dropdown'>\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\n\nimport './thememenu.css'\nimport AuthService from \"../../services/auth.service\";\n\nimport { useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n]\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n]\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n\n    const user = AuthService.getCurrentUser()\n    const menu_ref = useRef(null)\n    const menu_toggle_ref = useRef(null)\n\n    clickOutsideRef(menu_ref, menu_toggle_ref)\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\n\n    const closeMenu = () => menu_ref.current.classList.remove('active')\n\n    const [currMode, setcurrMode] = useState('light')\n\n    const [currColor, setcurrColor] = useState('blue')\n\n    const dispatch = useDispatch()\n\n    const setMode = mode => {\n        setcurrMode(mode.id)\n        localStorage.setItem('themeMode', mode.class)\n        dispatch(ThemeAction.setMode(mode.class))\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id)\n        localStorage.setItem('colorMode', color.class)\n        dispatch(ThemeAction.setColor(color.class))\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    if(user){\n        \n    }\n\n    return (\n       \n        <div>\n            {user?(\n                <div>\n                     <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\n                    <i className='bx bx-palette'></i>\n                    </button>\n                    <div ref={menu_ref} className=\"theme-menu\">\n                        <h4>Theme settings</h4>\n                        <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\n                            <i className='bx bx-x'></i>\n                        </button>\n                        <div className=\"theme-menu__select\">\n                            <span>Choose mode</span>\n                            <ul className=\"mode-list\">\n                                {\n                                    mode_settings.map((item, index) => (\n                                        <li key={index} onClick={() => setMode(item)}>\n                                            <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\n                                                <i className='bx bx-check'></i>\n                                            </div>\n                                            <span>{item.name}</span>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"theme-menu__select\">\n                            <span>Choose color</span>\n                            <ul className=\"mode-list\">\n                                {\n                                    color_settings.map((item, index) => (\n                                        <li key={index} onClick={() => setColor(item)}>\n                                            <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\n                                                <i className='bx bx-check'></i>\n                                            </div>\n                                            <span>{item.name}</span>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n     \n            ):(\n                <div>               \n                </div>\n            )}\n          \n        </div>\n    )\n}\n\nexport default ThemeMenu\n","import React,{useEffect,useState} from 'react'\nimport axios from 'axios';\nimport UserService from \"../services/user.service\";\nimport AuthService from \"../services/auth.service\";\nimport'../components/topnav/topnav.css'\n//material ui table \nimport EditIcon from '@mui/icons-material/Edit';\nimport AssignmentOutlinedIcon from '@mui/icons-material/AssignmentOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Grid,\n    Typography,\n    TablePagination,\n    TableFooter,\n    Divider,\n    Fab,\n  } from '@material-ui/core';\n  \n  //css\n  const useStyles = makeStyles((theme) => ({\n      table: {\n        secondary: {\n          light: '#ff7961',\n          main: '#f44336',\n          dark: '#ba000d',\n          contrastText: '#000',\n        },\n      },\n      tableContainer: {\n          borderRadius: 15,\n          margin: '10px 10px',\n          maxWidth: 1350\n      },\n      tableHeaderCell: {\n          sx: '4',\n          fontWeight: 'bold',\n          backgroundColor: theme.palette.primary.dark,\n          color: theme.palette.getContrastText(theme.palette.secondary.dark)\n      },\n      avatar: {\n          backgroundColor: theme.palette.primary.light,\n          color: theme.palette.getContrastText(theme.palette.primary.light)\n      },\n      name: {\n          fontWeight: 'bold',\n          color: theme.palette.secondary.dark\n      },\n      status: {\n          fontWeight: 'bold',\n          fontSize: '0.75rem',\n          color: 'white',\n          backgroundColor: 'grey',\n          borderRadius: 8,\n          display: 'inline-block'\n      }\n    }));\n\nfunction Customers () {\n\n   //liste des users \n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const[ListTest,SetTest]=useState([]);\n    const [searchAll, setSearchAll] = useState(\"\");\n    const user = AuthService.getCurrentUser()\n    //SELECT WHERE SEARCH INPUT \n    const onChangeSearchAll = (e) => {\n      const searchAll = e.target.value;\n      setSearchAll(searchAll);\n      const nom =ListTest.filter((val) => {\n        if(val.nom_soc.toLowerCase().includes(searchAll.toLowerCase())){\n          return val \n        }\n      })\n      const code_postal =ListTest.filter((val) => {\n        if(String(val.code_postal).includes(searchAll)){\n          return val \n        }\n      })\n      const siret =ListTest.filter((val) => {\n        if(String(val.siret).includes(searchAll)){\n          return val \n        }\n      })\n      const siren =ListTest.filter((val) => {\n        if(String(val.siren).includes(searchAll)){\n          return val \n        }\n      })\n\n      if(nom.length !== 0){\n        console.log(nom)\n        SetTest(nom);\n      }\n      if(code_postal.length !== 0){\n        console.log(true)\n        SetTest(code_postal);\n      }\n      if(siret.length !== 0){\n        console.log(true)\n        SetTest(siret);\n      }\n      if(siren.length !== 0){\n        console.log(true)\n        SetTest(siren);\n      }\n    \n    };\n    //SELECT ALL SOCIETES (CEMECA/SOFITECH)\n    const retrieveTutorials = () => {\n      if(user){\n        //afficher cemca\n        UserService.getCemecaBoard().then(\n            response => {\n                axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\n                  SetTest(response.data);\n                })\n            },\n    \n          );\n           //afficher sofitech\n        UserService.getSofitechBoard().then(\n            response => {\n                axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\n                  SetTest(response.data);\n                })\n            },\n      \n    \n            \n          );\n    \n    }\n    \n    };\n\n    //USE_EFFECT \n    useEffect(() =>{\n      retrieveTutorials()     \n    },[]);\n  \n    return (\n        <div>\n               {/* liste des connections */}\n                <div className=\"card card-container\">\n                  <div className=\"list row\">\n                  <h2 className=\" col-md-6 page-`header\">Liste des Sociétées</h2> \n                     {/* SEARCH INPUT */}\n                    <div className=\"col-md-4 list\">\n                        <div className=\"input-group mb-3\">\n                          <div className=\"topnav\">\n                            <div className=\"topnav__search\">\n                                <input  type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Recherche \"\n                                value={searchAll}\n                                onChange={onChangeSearchAll} \n                                />\n                                <i className='bx bx-search'></i>\n                            </div>\n                          </div> \n                        </div>\n                    </div>\n                     {/* TABLEAU DES SOCIETES */}\n                    <div className=\"col-md-12 list\">\n                    \n                  \n                        <TableContainer component={Paper} className={classes.tableContainer}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                              <TableHead>\n                                <TableRow>\n                                  <TableCell className={classes.tableHeaderCell}>Société</TableCell>\n                                  <TableCell  className={classes.tableHeaderCell}>Adresse postal</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>nom responnsable</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>Code naf</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>Syndicat</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>Interlocuteur</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>Action</TableCell>\n                                  <TableCell className={classes.tableHeaderCell}>info</TableCell>\n                                \n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n                                {ListTest.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                                  <TableRow key={row.name}>\n                                    <TableCell>\n                                        <Grid container >\n                                          \n                                            <Grid item lg={10}>\n                                                <Typography className={classes.name}>siret: {row.siret}</Typography>\n                                                <Typography color=\"textSecondary\" variant=\"body2\">siren: {row.siren}</Typography>\n                                                <Typography color=\"textSecondary\" variant=\"body2\"> {row.nom_soc}</Typography>\n                  \n                                            </Grid>\n                                        </Grid>\n                                    </TableCell>\n                                    \n                                      <TableCell>\n                                      <Grid item lg={10}>\n                                                <Typography> {row.adresse_local}</Typography>\n                                                <Typography color=\"textSecondary\" variant=\"body1\">{row.code_postal} {row.ville}</Typography>\n                                                <Typography >{row.ville_soc}</Typography>\n                  \n                                      </Grid>\n                                      </TableCell>   \n\n                                      <TableCell>{row.nom_responsable_soc}</TableCell>   \n                                      <TableCell>{row.activite_soc}</TableCell>   \n          \n                                    <TableCell>{row.syndicat}</TableCell>      \n                                    <TableCell>\n                                      \n                                        <Fab href={`/Interlocuteur/${row.siret}`} color=\"primary\" aria-label=\"edit\">\n                                          <EditIcon />\n                                        </Fab>\n                                    \n                                    </TableCell>            \n                                    <TableCell>\n                                        <Fab href={`/Action/${row.siret}`} color=\"primary\" aria-label=\"edit\">\n                                        <EditIcon />\n                                        </Fab>\n                                    \n                                    </TableCell>\n                                    <TableCell>\n                                    \n                                        <Fab href={`/Societe/${row.siret}`} color=\"primary\" aria-label=\"assignmentOutlinedIcon\">\n                                        <AssignmentOutlinedIcon />\n                                        </Fab>\n                                    \n                                    </TableCell>\n                                    \n                                  </TableRow>\n                                ))}\n                              </TableBody>\n                              <TableFooter>\n                              </TableFooter>\n                            </Table>\n                          </TableContainer>\n                    </div>\n                  </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Customers\n","import React, { useEffect, useState } from 'react'\n\nimport AuthService from \"../../services/auth.service\";\n\nimport './topnav.css'\n\nimport { Link } from 'react-router-dom'\n\nimport Dropdown from '../dropdown/Dropdown'\n\nimport ThemeMenu from '../thememenu/ThemeMenu'\n\nimport notifications from '../../assets/JsonData/notification.json'\n\nimport user_menu from '../../assets/JsonData/user_menus.json'\nimport tustom from '../../pages/Customers'\n\n\nconst curr_user = {\n    username: 'Tuat Tran',\n\n}\nconst user = AuthService.getCurrentUser();\n\nconst renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n    </div>\n)\n\nconst renderUserToggle = (user) => (\n    <div className=\"topnav__right-user\">\n        <div className=\"topnav__right-user__image\">\n            <img src={user.image} alt=\"\" />\n        </div>\n        <div className=\"topnav__right-user__name\">\n            {user.display_name}\n        </div>\n    </div>\n)\n\nconst renderUserMenu =(item, index) => (\n    <Link to='/' key={index}>\n        <div className=\"notification-item\">\n            <i className={item.icon}></i>\n            <span>{item.content}</span>\n        </div>\n    </Link>\n)\n\nconst Topnav = props => {\n    const [currentUser, setCurrentUser] = useState(undefined);\n   \n   \n     useEffect(()=>{\n        const user = AuthService.getCurrentUser();\n            if (user){\n                setCurrentUser(user)\n                \n            }\n    \n       \n     },[])\n     return (\n        <div>\n            {user?(\n        \n                <div className='topnav'>\n                    <div className=\"input-group mb-3\">\n                    <div className=\"topnav\">\n                      <div className=\"topnav__search\">\n                         \n                      </div>\n                    </div> \n                  </div>\n                    <div className=\"topnav__right\">\n                        <div className=\"topnav__right-item\">\n                            {/* dropdown here */}\n                            {currentUser ?(\n                        \n                        <Link>\n                        <div  className=\"sidebar__item\">\n                            <div  className={`sidebar__item-inner`}>\n                            <i className='bx bxs-user-check' ></i>\n                                <span >\n                                {currentUser.username}\n                                </span>\n                            </div>\n                            \n                        </div>\n                        </Link>\n                            ):(\n                                <Dropdown\n                                customToggle={() => renderUserToggle(curr_user)}\n                                contentData={user_menu}\n                                renderItems={(item, index) => renderUserMenu(item, index)}\n                            />\n                            )}\n                        </div>\n                        <div className=\"topnav__right-item\">\n                            <Dropdown\n                                icon='bx bx-bell'\n                                badge='0'\n                                contentData={notifications}\n                                renderItems={(item, index) => renderNotificationItem(item, index)}\n                                renderFooter={() => <Link to='/'>View All</Link>}\n                            />\n                            {/* dropdown here */}\n                        </div>\n                        <div className=\"topnav__right-item\">\n                            <ThemeMenu/>\n                        </div>\n                    </div>\n                </div>\n                ):(\n                    <div>               \n                    </div>\n                )}\n        </div>    \n       \n    )\n}\n\nexport default Topnav\n","import React from 'react'\n\nimport './statuscard.css'\n\nconst StatusCard = props => {\n    return (\n        <div className='status-card'>\n            <div className=\"status-card__icon\">\n                <i className={props.icon}></i>\n            </div>\n            <div className=\"status-card__info\">\n                <h4>{props.count}</h4>\n                <span>{props.title}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatusCard\n","import axios from \"axios\";\n\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\n\n\n\nclass AuthAction {\n\n\n  create(data){\n    return axios.post(API_URL + \"action\", data);\n  }\n \n\n  findAll(){\n    return axios.get(API_URL + \"action\");\n\n  };\n \n\n \n}\n\nexport default new AuthAction();\n","import React,{useEffect,useState} from 'react'\n\nimport axios from 'axios';\n\nimport AuthService from \"../services/auth.service\";\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\n\n\nimport Badge from '../components/badge/Badge'\n\n\n//table class\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nimport UserService from \"../services/user.service\";\n\nimport AuthAction from  \"../services/Action\";\n\n\nconst chartOptions = {\n    series: [{\n        name: 'nombre action ',\n        data: [40,70,20,90,36,80,30,91,60]\n    },\n    {\n        name: 'nombre adherent ajouté ',\n        data: [20,40,50,10,46,20,80,71,30]\n    }, {\n        name: 'nombre contrat signé',\n        data: [40, 30, 20, 60, 40, 16, 40, 20, 51]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconsole.log(AuthAction.findAll)\n\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\n\n\nconst Dashboard = () => {\n\n\n  //afficher nombre d'action\n\n\n\n\n \n    const[ListTest,SetTest]=useState([]);\n    const[Cemeca,SetIscemeca]=useState(false);\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const[Action,SetAction]=useState([]);\n\n    useEffect(()=>{\n        const user = AuthService.getCurrentUser();\n            if (user){\n                //ACTION \n                AuthAction.findAll().then((response) => {\n                        SetAction(response.data)\n                    })\n                .catch((e) => {\n                    console.log(e);\n                });\n\n                 \n                setCurrentUser(user) \n                   //afficher cemca\n            UserService.getCemecaBoard().then(\n                response => {\n                    axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\n                        SetTest(response.data);\n                        SetIscemeca(true)\n                    })\n                },\n          \n\n                \n              );\n               //afficher cemca\n            UserService.getSofitechBoard().then(\n                response => {\n                    axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\n                        SetTest(response.data);\n                    })\n                },\n          \n\n                \n              );\n              \n            }\n     },[]) \n     const Action_util =Action.filter(task=>task.id_utili===currentUser.id)\n    \n//action\nconst statusCards =[\n    {\n        \"icon\": \"bx bx-bar-chart-alt\",\n        \"count\": Action.length,\n        \"title\": \"nombres d'action \"\n    },\n    {\n        \"icon\": \"bx bx-bar-chart-alt\",\n        \"count\": Action_util.length,\n        \"title\": \"action utilisateur\"\n    }\n]\n\n    const latestOrders = {\n        header: [\n            \"siret\",\n            \"code naf\",\n            \"nom responnsable\",\n            \"tel\",\n            \"société\"\n        ],\n        \n    }\n    const renderOrderBody = (item, index) => (\n        <tr key={index}>\n            <td>{item.siret}</td>\n            <td>{item.activite_soc}</td>\n            <td>{item.nom_responsable_soc}</td>\n    \n            <td>{item.tel}</td>\n            {Cemeca? (\n                <td>Cemeca</td>\n            ) : (\n                <td>Sofitech</td>\n            )}\n           \n        </tr>\n    ) \n    console.log()\n       \n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n        return (\n            \n            <div>\n                {currentUser ?(\n                    <div>\n                        <h2 className=\"page-header\">tableau de bord</h2>\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <div className=\"row\">\n                                   \n                                    {\n                                        statusCards.map((item, index) => (\n                                            <div className=\"col-6\" key={index}>\n                                                 <a href=\"Action/32143789900057\">\n                                                <StatusCard\n                                                    icon={item.icon}\n                                                    count={item.count}\n                                                    title={item.title}\n                                                />\n                                                 </a>\n                                            </div>\n                                        ))\n                                    }\n                                   \n                                </div>\n                            </div>\n                            <div className=\"col-6\">\n                                <div className=\"card full-height\">\n                                    {/* chart */}\n                                    <Chart\n                                        options={themeReducer === 'theme-mode-dark' ? {\n                                            ...chartOptions.options,\n                                            theme: { mode: 'dark'}\n                                        } : {\n                                            ...chartOptions.options,\n                                            theme: { mode: 'light'}\n                                        }}\n                                        series={chartOptions.series}\n                                        type='line'\n                                        height='100%'\n                                    />\n                                </div>\n                            </div>\n                         \n                            <div className=\"col-8\">\n                                <div className=\"card\">\n                                    <div className=\"card__header\">\n                                        <h3>Dernières Sociétés crées</h3>\n                                    </div>\n                                    <div className=\"card__body\">\n                                        \n                                      \n                                    <TableContainer component={Paper}>\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                        <TableHead>\n                                        <TableRow>\n                                            <TableCell>siret</TableCell>\n                                            <TableCell align=\"right\">nom_soc</TableCell>\n                                            <TableCell align=\"right\">observation</TableCell>\n                                            <TableCell align=\"right\">adresse postal</TableCell>\n                                            <TableCell align=\"right\">date ajouté</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                        {ListTest.map((row) => (\n                                            <TableRow\n                                            key={row.siret}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.siret}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.nom_soc}</TableCell>\n                                            <TableCell align=\"right\">{row.observation}</TableCell>\n                                            <TableCell align=\"right\">{row.adresse_local}</TableCell>\n                                            <TableCell align=\"right\">{row.createdAt}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                        </TableBody>\n                                    </Table>\n                                    </TableContainer>\n                                        \n                                    </div>\n                                    <div className=\"card__footer\">\n                                        <Link to='Societes'>view all</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ): (\n                    <div  className=\"sidebar__item\">\n                        <div  disabled  className={`sidebar__item-inner `}>\n                        <i class='bx bxs-user-x' ></i>\n                            <span >\n                            pas connecter\n                            </span>\n                        </div>\n                        \n                    </div>\n                )}\n            </div>\n        )\n        }\n\nexport default Dashboard\n","\nimport {isEmail} from \"validator\";\n\n\nclass checkedForm{\n\n   required = value => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n  \n   vemail = value => {\n    if (!isEmail(value)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This is not a valid email.\n        </div>\n      );\n    }\n  };\n   vrole = value => {\n    if (isNaN(value)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This is not a valid role.\n        </div>\n      );\n    }\n  };\n  \n   vusername = value => {\n    if (value.length < 3 || value.length > 20) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          The username must be between 3 and 20 characters.\n        </div>\n      );\n    }\n  };\n  \n   vpassword = value => {\n    if (value.length < 6 || value.length > 40) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          The password must be between 6 and 40 characters.\n        </div>\n      );\n    }\n  };\n  \n}\nexport default new checkedForm();\n","import React, { useState, useRef ,useEffect,useMemo} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport checkForm from \"../common/Register/checkedForm\"\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n//react table\nimport { useTable } from \"react-table\";\n//material ui table \nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { \n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Avatar,\n  Grid,\n  Typography,\n  TablePagination,\n  TableFooter,\n  Divider\n} from '@material-ui/core';\n\n\nconst Register = (props) => {\n  //css style \n  //css\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 200,\n  },\n  tableContainer: {\n      borderRadius: 15,\n      margin: '10px 10px',\n      maxWidth: 950\n  },\n  tableHeaderCell: {\n      fontWeight: 'bold',\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.getContrastText(theme.palette.primary.dark)\n  },\n  avatar: {\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.getContrastText(theme.palette.primary.light)\n  },\n  name: {\n      fontWeight: 'bold',\n      color: theme.palette.secondary.dark\n  },\n  status: {\n      fontWeight: 'bold',\n      fontSize: '0.75rem',\n      color: 'white',\n      backgroundColor: 'grey',\n      borderRadius: 8,\n      padding: '3px 10px',\n      display: 'inline-block'\n  }\n}));\n    //variable liste des UserService\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [listuser,setListeUser] = useState([]);\n   //variable liste authetification \n   const [listauth, setListeAuth] = useState([]);\n   const listauthRef = useRef();\n   listauthRef.current = listauth;\n  //register user variable\n  const form = useRef();\n  const checkBtn = useRef();\n  const vrole = checkForm.vrole;\n  const vusername =checkForm.vusername;\n  const vpassword = checkForm.vpassword;\n  const vemail = checkForm.vemail;\n  const required = checkForm.required;\n//les status des variable \n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n //useEffect de toute la table Register\n  useEffect(() => {\n    retrieveTutorials();\n    retrieveUsers();\n  }, []);\n  \n\n\n //afficher la liste des users\n  const retrieveUsers = () => {\n    UserService.getListe_User()\n      .then((response) => {\n        setListeUser(response.data);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  console.log(UserService.getListe_User())\n\n  \n   //afficher la liste des hauthentification\n  const retrieveTutorials = () => {\n    AuthService.get_historique_auth()\n      .then((response) => {\n        setListeAuth(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  const refreshList = () => {\n    retrieveTutorials();\n  };\n  const removeAllTutorials = () => {\n    AuthService.removeAll_historique_auth()\n      .then((response) => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n \n  const deleteTutorial = (rowIndex) => {\n    const id = listauthRef.current[rowIndex].id;\n    console.log(id)\n\n    AuthService.remove_historiqueremove(id)\n      .then((response) => {\n        props.history.push(\"Register\");\n\n        let newTutorials = [...listauthRef.current];\n        newTutorials.splice(rowIndex, 1);\n\n        setListeAuth(newTutorials);\n      })\n      .catch((e) => {\n        console.log('tets');\n      });\n  };\n  const openTutorial = (rowIndex) => {\n    const id = listauthRef.current[rowIndex].id;\n\n    props.history.push(\"/tutorials/\" + id);\n  };\n  \n  \n  \n// liste des auths  \n\n\n\n  //liste des users \n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n    /*const colu = useMemo(\n    () => [\n      {\n        Header: \"Userame\",\n        accessor: \"username\",\n      },\n      {\n        Header: \"Role\",\n        accessor: \"role\",\n      },\n\n      {\n        Header: \"Actions\",\n        accessor: \"actions\",\n        Cell: (props) => {\n          const rowIdx = props.row.id;\n          return (\n            <div>\n              <span onClick={() => openTutorial(rowIdx)}>\n                <i className=\"far fa-edit action mr-2\"></i>\n              </span>\n\n              <span onClick={() => deleteTutorial(rowIdx)}>\n                <i className=\"bx bxs-trash-alt action\"></i>\n              </span>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: listauth,\n  }); \n  */\n    //crud ajouter un user\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n  const onChangeRoles = (e) => {\n    const role = e.target.value;\n    setRoles([...roles,role]);\n  \n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email,roles, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n\n        (error) => {\n            console.log(roles)\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  };\n\n  \n    return (\n      <div className=\"col-md-12\">\n\n        <h1>\n          gestion utilisateur\n        </h1>\n    {/* liste des users */}\n        <div className=\"card card-container\">\n          <div className=\"list row\">\n            <div className=\"col-md-12 list\">\n              <h3>Listes des Utilisateurs</h3>\n                  <TableContainer component={Paper} className={classes.tableContainer}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell className={classes.tableHeaderCell}>nom</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>email</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>password</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>Status</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {listuser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                          <TableRow key={row.name}>\n                            <TableCell>\n                                <Grid container>\n                                    <Grid item lg={2}>\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\n                                    </Grid>\n                                    <Grid item lg={10}>\n                                        <Typography className={classes.name}>{row.name}</Typography>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\n          \n                                    </Grid>\n                                </Grid>\n                              </TableCell>\n                            <TableCell>\n                                <Typography color=\"primary\" variant=\"subtitle2\">{row.email}</Typography>\n                                <Typography color=\"textSecondary\" variant=\"body2\">{row.company}</Typography>\n                              </TableCell>\n                            <TableCell>*********</TableCell>\n                            <TableCell>\n                                <Typography \n                                  className={classes.status}\n                                  style={{\n                                      backgroundColor: \n                                      ((row.status === 'Active' && 'green') ||\n                                      (row.status === 'Pending' && 'blue') ||\n                                      (row.status === 'Blocked' && 'orange'))\n                                  }}\n                                >{row.status}</Typography>\n                              </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                      <TableFooter>\n                      <TablePagination\n                          rowsPerPageOptions={[5, 10, 15]}\n                          component=\"div\"\n                          count={listuser.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          onChangePage={handleChangePage}\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\n                      />\n                      </TableFooter>\n                    </Table>\n                  </TableContainer>\n            </div> \n          </div>\n        </div>\n    {/* liste des connections */}\n        <div className=\"card card-container\">\n          <div className=\"list row\">\n            <div className=\"col-md-12 list\">\n              <h3>Historique des Authentifications</h3> \n          \n                <TableContainer component={Paper} className={classes.tableContainer}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell className={classes.tableHeaderCell}>Username</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>Password</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>Message</TableCell>\n                          <TableCell className={classes.tableHeaderCell}>Date De Connection</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {listauth.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                          <TableRow key={row.name}>\n                            <TableCell>\n                                <Grid container>\n                                    <Grid item lg={2}>\n                                        <Avatar alt={row.name} src='.' className={classes.avatar}/>\n                                    </Grid>\n                                    <Grid item lg={10}>\n                                        <Typography className={classes.name}>{row.name}</Typography>\n                                        <Typography color=\"textSecondary\" variant=\"body2\">{row.username}</Typography>\n          \n                                    </Grid>\n                                </Grid>\n                              </TableCell>\n                            \n                            <TableCell>{row.password}</TableCell>                 \n                            <TableCell>\n                                <Typography \n                                  className={classes.status}\n                                  style={{\n                                      backgroundColor: \n                                      ((row.message === 'connection etablie !' && 'green') ||\n                                      (row.message === 'connection echouer !' && 'red'))\n                                  }}\n                                >{row.message}</Typography>\n                              </TableCell>\n                              <TableCell>\n                                <Typography color=\"primary\" variant=\"subtitle2\">{row.date_connection}</Typography>\n              \n                              </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                      <TableFooter>\n                      <TablePagination\n                          rowsPerPageOptions={[5, 10, 15]}\n                          component=\"div\"\n                          count={listauth.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          onChangePage={handleChangePage}\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\n                      />\n                      </TableFooter>\n                    </Table>\n                  </TableContainer>\n            </div>\n          </div>\n        </div>\n    {/* ajouter un user */}\n          <div className=\"card card-container\">\n            <h3>Ajouter un utilisateur</h3>\n              <Form onSubmit={handleRegister} ref={form}>\n                {!successful && (\n                    <div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"username\"\n                          value={username}\n                          onChange={onChangeUsername}\n                          validations={[required, vusername]}\n                        />\n                      </div>\n      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"email\"\n                          value={email}\n                          onChange={onChangeEmail}\n                          validations={[required, vemail]}\n                        />\n                      </div>          \n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Input\n                          type=\"password\"\n                          className=\"form-control\"\n                          name=\"password\"\n                          value={password}\n                          onChange={onChangePassword}\n                          validations={[required, vpassword]}\n                        />\n                      </div>\n\n                      <div className=\"form-check container\">\n                        <div className=\"row\">\n                        <label className=\"form-check-label\" htmlFor=\"role\">cemeca</label>\n                        <Input \n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"cemeca\"\n                          value=\"1\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"role\">sofitech</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"sofitech\"\n                          value=\"2\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin cemeca</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"admin_cemeca\"\n                          value=\"3\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"role\">admin sofitech</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"admin_sofitech\"\n                          value=\"4\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                        </div>\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_cemeca</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"super_cemeca\"\n                          value=\"5\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_sofitech</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"super_sofitech\"\n                          value=\"6\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        />\n                          <label className=\"form-check-label\" htmlFor=\"role\">super_admin</label>\n                          <Input\n                          type=\"checkbox\"\n                          className=\"form-check\"\n                          name=\"super_admin1\"\n                          value=\"7\"\n                          onChange={onChangeRoles}\n                          validations={[required, vrole]}\n                        /> \n                        <label className=\"form-check-label\" htmlFor=\"role\">super_admin2</label>\n                        <Input\n                        type=\"checkbox\"\n                        className=\"form-check\"\n                        name=\"super_admin2\"\n                        value=\"8\"\n                        onChange={onChangeRoles}\n                        validations={[required, vrole]}\n                      />\n                      </div>\n          \n                      <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\">Ajouter</button>\n                      </div>\n                    </div>\n                  )}\n\n                  {message && (\n                    <div className=\"form-group\">\n                      <div\n                        className={\n                          successful\n                            ? \"alert alert-success\"\n                            : \"alert alert-danger\"\n                        }\n                        role=\"alert\"\n                      >\n                        {message}\n                      </div>\n                    </div>\n                  )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n              </Form>\n          </div> \n        </div>\n    );\n  }\n  export default Register;\n\n","import React, { useState, useRef } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport ReactLoading from 'react-loading';\n \nconst Example = ({ type, color }) => (\n    <ReactLoading type={type} color={color} height={667} width={375} />\n);\n \nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\nconst Login = () => {\n  let history = useHistory();\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [historique_auth, sethistorique_auth] = useState(\"\");\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n  const handleLogin = (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          const message = 'connection etablie !';\n          const password ='********'\n          history.push(\"/\");\n          window.location.reload();\n          AuthService.create_historique_auth(username, password,message).then(\n            () => {   \n            },\n            (error) => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n              setMessage(resMessage);\n            }\n          );\n        },\n        (error) => {\n          const message = 'connection echouer !'\n          AuthService.create_historique_auth(username, password,message).then(\n            () => {   \n            },\n            (error) => {\n              const resMessage =\n                (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n                error.message ||\n                error.toString();\n              setMessage(resMessage);\n            }\n          );\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState, useRef ,useEffect} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthAction from \"../services/Action\";\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\n\n\n//table class\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\n\nimport Select  from '@mui/material/Select';\n\n\nconst Action = (props) => {\n\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const form = useRef();\n    const checkBtn = useRef();\n    const [ID_societe,setID_societe] = useState([]);\n    const [ListeAction,SetAction] = useState([]);\n    useEffect(()=>{\n      const user = AuthService.getCurrentUser();\n          if (user){\n              //ACTION \n              AuthAction.findAll().then((response) => {\n                SetAction(response.data)\n                console.log(response.data)\n              })\n              .catch((e) => {\n                  console.log(e);\n              });\n                 //afficher cemca\n          UserService.getCemecaBoard().then(\n              response => {\n                  axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\n                    setID_societe(response.data);\n                  })\n              },\n        \n\n              \n            );\n             //afficher cemca\n          UserService.getSofitechBoard().then(\n              response => {\n                  axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\n                    setID_societe(response.data);\n                  })\n              },\n\n            );\n            \n          }\n   },[]) \n\n   //get action where user\nconst user = AuthService.getCurrentUser()\nconst listeActUser =ListeAction.filter(task=>task.id_utili===user.id)\nconsole.log(listeActUser)\n\n\n// Get ID from URL\nconst params = useParams();\nvar nb=parseInt(params.id);\nconst actItem =ID_societe.filter(task=>task.siret===nb)\nconsole.log(actItem)\n//inntial user state\n\n//intitial Action \n    const initial1ctionState = {\n     id_utili:\"\",\n    nom_interlocuteur: \"\",\n    type_action:\"\",\n    nom_societe: \"\",\n    description: \"\",\n    date_action: \"\",\n    date_rdv: \"\", \n    };\n\n  const [Action, setAction] = useState({initial1ctionState});\n\n console.log(nb) \n  \n  const saveAction = (e) => {\n  \n    var data = {\n      nom_interlocuteur:Action.nom_interlocuteur,\n      nom_societe:actItem[0].nom_soc,\n      date_rdv:Action.date_rdv,\n      date_action: new Date(),\n      id_utili:user.id,\n      type_action:Action.type_action,\n      description:Action.description,\n\n\n     \n    };\n  \n    e.preventDefault();\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthAction.create(data)\n        .then(response => {\n          setAction({\n           nom_interlocuteur:response.data.nom_interlocuteur,\n           nom_societe: response.data.nom_societe,\n           date_rdv: response.data.date_rdv,\n           date_action: response.data.date_action,\n           id_utili: response.data.id_utili,\n           type_action: response.data.type_action,\n           description: response.data.description,\n           \n          }\n          );\n          setSuccessful(true);\n          setMessage(response.data.message)\n        },\n        error => {\n          const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      setMessage(resMessage);\n        }\n        )\n        .catch(e => {\n          console.log(e);\n\n        });\n    }\n};\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setAction({ ...Action, [name]: value });\n\n};\n\n\n\n\nconst options = [\n  { value: 'RDV', label: 'RDV' },\n  { value: 'contact téléphonique', label: 'contact téléphonique' },\n  { value: 'contact teams', label: 'contact teams' },\n  { value: 'contact par courrier', label: 'contact par courrier' }\n]\n\n    return (\n        <div className=\"col-md-12\">\n  \n          \n   \n    \n   {/* ajouter un user */}\n  \n\n   <h3><i class='bx bxs-bank danger'></i> liste des actions</h3>\n            <TableContainer component={Paper}>\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                        <TableHead>\n                                        <TableRow>\n                                            <TableCell>nom societe</TableCell>\n                                            <TableCell align=\"right\">date rdv</TableCell>\n                                            <TableCell align=\"right\">nom_interlocuteur</TableCell>\n                                            <TableCell align=\"right\">date_action</TableCell>\n                                            <TableCell align=\"right\">type</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                        {listeActUser.map((row) => (\n                                            <TableRow\n                                            key={row.nom}\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.nom_societe}\n                                            </TableCell>\n                                            \n                                            <TableCell align=\"right\">{row.date_rdv}</TableCell>\n                                            <TableCell align=\"right\">{row.nom_interlocuteur}</TableCell>\n                                            <TableCell align=\"right\">{row.date_action}</TableCell>\n                                            <TableCell align=\"right\">{row.type_action}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                        </TableBody>\n                                    </Table>\n              </TableContainer>\n     \n\n              <br />\n              <h1>\n            Ajouter une action\n          </h1>\n              <div className=\"card card-container\">\n           \n            {actItem.map((e)=>(\n              <h3><i class='bx bxs-bank danger'></i>  {e.nom_soc}</h3>\n            ))}\n            <Form onSubmit={saveAction} ref={form}>\n                {!successful && (\n                    <div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">utlisateur</label>\n                         <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\n                          <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"utlisateur\"\n                            multiline\n                            name=\"id_utili\"\n                            value={user.username}\n                            onChange={handleInputChange}\n                          />\n                         </FormControl>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">Date de l'action</label>\n                        <Input\n                          type=\"date\"\n                          className=\"form-control\"\n                          name=\"date_rdv\"\n                          value={Action.date_rdv}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">description</label>\n                          <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\n                            <TextField\n                              id=\"outlined-multiline-static\"\n                              label=\"description\"\n                              multiline\n                              rows={7}\n                              name=\"description\"\n                              value={Action.description}\n                              onChange={handleInputChange}\n                            />\n                          </FormControl>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">nom de l'interlocuteur</label>\n                       \n                        <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\n                          <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"nom de l'interlocuteur\"\n                            multiline\n                            name=\"nom_interlocuteur\"\n                            value={Action.nom_interlocuteur}\n                            onChange={handleInputChange}\n                          />\n                         </FormControl>\n                      </div>          \n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\">type d'action</label>\n\n                              <FormControl fullWidth>\n                                <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n                                <Select\n                                  labelId=\"demo-simple-select-label\"\n                                  id=\"demo-simple-select\"\n                                  value={Action.type_action}\n                                  label=\"Age\"\n                                  name=\"type_action\"\n                                  onChange={handleInputChange}\n                                >\n                                  <MenuItem value={\"RDV\"}>RDV</MenuItem>\n                                  <MenuItem value={\"contact téléphonique\"}>contact téléphonique</MenuItem>\n                                  <MenuItem value={\"contact teams\"}>contact teams</MenuItem>\n                                  <MenuItem value={\"contact par courrier\"}>contact par courrier</MenuItem>\n                                </Select>\n                              </FormControl>\n              \n                      </div>\n\n                    \n\n                      <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\">Valider l'action</button>\n                      </div>\n                    </div>\n                  )}\n\n                  {message && (\n                    <div className=\"form-group\">\n                      <div\n                        className={\n                          successful\n                            ? \"alert alert-success\"\n                            : \"alert alert-danger\"\n                        }\n                        role=\"alert\"\n                      >\n                        {message}\n                      </div>\n                    </div>\n                  )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n              </Form>\n          </div> \n          </div>\n      );\n    }\n    export default Action;\n  \n  ","import axios from \"axios\";\n\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst create = data => {\n  return axios.post(API_URL + \"ajouter\", data);\n};\n/*\nconst getAll = () => {\n  return http.get(\"/tutorials\");\n};\n\nconst get = id => {\n  return http.get(`/tutorials/${id}`);\n};\n\n\nconst update = (id, data) => {\n  return  axios.post(API_URL + `ajouter/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/tutorials/${id}`);\n};\n\n*/\nconst removeAll = () => {\n  return axios.delete(`/tutorials`);\n};\nconst findByTitle = siret => {\n  return axios.get(`/Societes?siret=${siret}`);\n};\n\nconst AuthSociete = {\n\n  create,\n  findByTitle\n};\n\nexport default AuthSociete;\n","\nclass checkedForm{\n\n   required = value => {\n    if (!value) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n      );\n    }\n  };\n  \n\n\n \n   vsiret = value => {\n    if (isNaN(value)&&(value.length<9)&&(value.length>13)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          siret invalide :(.\n        </div>\n      );\n    }\n  };\n  \n   vsiren = value => {\n   if (isNaN(value)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This is not a valid siren.\n        </div>\n      );\n    }\n  };\n  \n   vnom_soc = value => {\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n         nom socitété invalide !.\n        </div>\n      );\n    }\n  };\n  \n   vnom_responsable = value => {\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          nom responsable invalide !.\n        </div>\n      ); \n    }\n  };\n  \n   vdate_creation_soc = value => {\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          date invalide !\n        </div>\n      );\n    }\n  };\n  \n   vactivité = value => {\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          activité invalide !\n        </div>\n      );\n    }\n  };\n   vadresse = value => {\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          adresse invalide !\n        </div>\n      );\n    }\n  };\n   vpays = value =>{\n    if ((value.length<4)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          pays invalide !\n        </div>\n      );\n    }\n  }\n  \n   cville = value => {\n    if (value.length < 4 || value.length > 10) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          ville invalide !\n        </div>\n      );\n    }\n  };\n  \n   vcode_postal = value => {\n    if (value.length < 4 || value.length > 10) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          code postal invalide !\n        </div>\n      );\n    }\n  };\n  \n   vopportunité = value => {\n    if (value.length < 4) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n           opportunité invalide !\n        </div>\n      );\n    }\n  };\n  \n   vobservation = value => {\n    if (value.length < 4) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n           opportunité invalide !\n        </div>\n      );\n    }\n  };\n  \n   vtel = value => {\n    if (value.length < 4 || value.length > 10) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n           télephone invalide !\n        </div>\n      );\n    }\n  };\n  \n   vid_role = value => {\n    if (isNaN(value)) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          1 or 2.\n        </div>\n      );\n    }\n  };\n  \n  \n}\nexport default new checkedForm();\n","\nimport React, { useState,useRef,useEffect } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthSociete from \"../services/societe\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport checkForm from '../common/Ajouter/checkedForm'\nimport './../assets/css/picklist.css'\nimport Multiselect from 'multiselect-react-dropdown';\nimport axios from 'axios';\n\n\nconst AddTutorial = () => {\n  \n\n\n  //variable checked from \n  const required = checkForm.required;\n  const vsiret = checkForm.vsiret;\n  const vsiren = checkForm.vsiren;\n  const vnom_soc = checkForm.vnom_soc;\n  const vnom_responsable = checkForm.vnom_responsable;\n  const vdate_creation_soc = checkForm.vdate_creation_soc;\n  const vid_role = checkForm.vid_role;\n  const vcode_postal = checkForm.vcode_postal;\n  const vobservation = checkForm.vopportunité;\n  const cville = checkForm.cville;\n  const vsyndicat = checkForm.vobservation;\n  const vactivité = checkForm.vactivité;\n  const vtel = checkForm.vtel;\n  const vpays = checkForm.vpays;\n  const vadresse = checkForm.vadresse;\n\n  const initialSocieteState = {\n    siret: \"\",\n    siren: \"\",\n    nom_soc: \"\",\n    nom_responsable_soc: \"\",\n    date_creation_soc: \"\",\n    activite_soc: \"\",\n    adresse_local: \"\",\n    pays: \"\",\n    ville_soc: \"\",\n    code_postal: \"\",\n    syndicat: \"\",\n    observation: \"\",\n    tel: \"\",\n    app_sofitech: \"\",\n    app_cemeca: \"\",\n    soc_sofitech: \"\",\n    soc_cemeca: \"\",\n    id_role: \"\",\n   \n    \n  };\n  const liste = [\n  //FIM\n    {\n      TYPE: 'FIM',\n      NOM: 'ARTEMA'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'AXEMA'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'EVOLIS'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FABRILABO'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FEDERATION FORGE FONDERIE'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FFMI'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FIM-AC'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FIM METAUX EN FEUILLES'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'FIM RESSORTS'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'PHOTONICS'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SIBCO'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SM'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SNCT'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SNDEC'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SNITEM'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SYMOP'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'SYNEG'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'UITS'\n    },\n    {\n      TYPE: 'FIM',\n      NOM: 'UNICLIMA'\n    }\n    ,\n    {\n      TYPE: 'FIM',\n      NOM: 'UNIQ'\n    }\n    ,\n    {\n      TYPE: 'FIM',\n      NOM: 'UNITAM'\n    },\n                        \n  //FIEEC\n    {\n      TYPE: 'FIEEC',\n      NOM: 'ACN'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'ACR'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'ACSIEL'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'AFNUM'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'E-VISIONS'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'FGME'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'GIFAM'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'GIL'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'FFGME'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'IGNES'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SER'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SIRMELEC'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SNESE'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SPAP'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SPDEI'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: 'SYCABEL'\n    },\n    {\n      TYPE: 'FIEEC',\n      NOM: \"Syndicat de l'éclairage\"\n    },\n\n\n    ]\n  const liste_syndicat =[ {\n    TYPE: 'FIM',\n    NOM: 'ARTEMA'\n  }]  \n  const [Societe, setSociete] = useState({initialSocieteState});\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [myJSON, setactive] = useState([]);\n  const form = useRef();\n  const checkBtn = useRef();\n\n\n  const land =(e) => {\n    setactive(Array.isArray(e)?e.map(x=>x.NOM):[])\n  }\n\n\n \n\n  const saveSociete = (e) => {\n        const syndicat = myJSON.join();\n        var data = {\n          siret: Societe.siret,\n          siren: Societe.siren,\n          nom_soc: Societe.nom_soc,\n          nom_responsable_soc: Societe.nom_responsable_soc,\n          date_creation_soc: Societe.date_creation_soc,\n          activite_soc: Societe.activite_soc,\n          adresse_local: Societe.adresse_local,\n          pays: Societe.pays,\n          ville_soc: Societe.ville_soc,\n          code_postal:Societe.code_postal,\n          syndicat:syndicat,\n          observation: Societe.observation,\n          tel: Societe.tel,   \n          id_role: Societe.id_role,\n          message: message.message,\n          successful:successful.successful,\n        };\n      \n        e.preventDefault();\n        form.current.validateAll();\n        if (checkBtn.current.context._errors.length === 0) {\n          AuthSociete.create(data)\n            .then(response => {\n              setSociete({\n                siren:response.data.siren,\n                siret: response.data.siret,\n                nom_soc: response.data.nom_soc,\n                nom_responsable_soc: response.data.nom_responsable_soc,\n                activite_soc: response.data.activite_soc,\n                adresse_local: response.data.adresse_local,\n                pays: response.data.pays,\n                ville_soc: response.data.ville_soc,\n                code_postal: response.data.code_postal,\n                syndicat: response.data.syndicat,\n                observation: response.data.observation,\n                tel: response.data.tel,\n                date: response.data.date,\n                id_role: response.data.id_role\n              }\n              );\n              setSuccessful(true);\n              setMessage(response.data.message)\n              console.log(Societe.syndicat,'syndicat');\n            },\n            error => {\n              const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          setMessage(resMessage);\n            }\n            )\n            .catch(e => {\n              console.log(e);\n\n            });\n        }\n  };\n  \n  console.log(\"test\",myJSON)\n \n\n\n //API INSEE\n  const API_INSEE_SIRET = 'https://entreprise.data.gouv.fr/api/sirene/v3/etablissements/?siret='\n   var b = String(Societe.siret)\n   console.log(b.length)\n   const chaine = API_INSEE_SIRET +b\n  const getAPINSEE =()=> {\n  \n    return axios.get(API_INSEE_SIRET+b);\n  }\n  console.log()\n  const [SIRETAPI, setSIRETAPI] = useState([]);\n  useEffect(() =>{\n        //afficher API insee\n        \n       \n},[]);\n\n\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setSociete({ ...Societe, [name]: value });\n  getAPINSEE().then((response) => {\n               \n    setSIRETAPI(response.data.etablissements);\n  \n})\n};\n\nconsole.log(b)\nconsole.log(chaine)\nconsole.log(SIRETAPI)\n\n\n  return (\n    <div className=\"submit-form\">\n\n       \n      \n         <Form onSubmit={saveSociete} ref={form}>\n         {!successful && (\n           <div>\n\n              <div className=\"form-group\">\n              \n                <label htmlFor=\"title\">siret</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.siret}\n                  onChange={handleInputChange}\n                  validations={[required,vsiret]}\n                  name=\"siret\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">siren</label>\n                {SIRETAPI.map((e)=>\n             \n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.siren=e.siren}\n                  onChange={handleInputChange}\n                  validations={[required,vsiren]}\n                  name=\"siren\"\n                />\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">nom de la societe</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.nom_soc}\n                  onChange={handleInputChange}\n                  validations={[required,vnom_soc]}\n                  name=\"nom_soc\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">nom du delegué</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.nom_responsable_soc}\n                  onChange={handleInputChange}\n                  validations={[required, vnom_responsable]}\n                  name=\"nom_responsable_soc\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">code naf</label>      \n                  \n                   {SIRETAPI.map((e)=>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.activite_soc = e.activite_principale}\n                  onChange={handleInputChange}\n                  validations={[required,vsyndicat]}\n                  name=\"activite_soc\"\n                />\n                 )}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">adresse_local</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.adresse_local}\n                  onChange={handleInputChange}\n                  validations={[required,vadresse]}\n                  name=\"adresse_local\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">pays</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  defaultValue=\"France\"\n                  value={Societe.pays}\n                  onChange={handleInputChange}\n                  validations={[required,vpays]}\n                  name=\"pays\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">ville_soc</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.ville_soc}\n                  onChange={handleInputChange}\n                  validations={[required,cville]}\n                  name=\"ville_soc\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"text\">code_postale</label>\n                {SIRETAPI.map((e)=>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.code_postal=e.code_postal}\n                  onChange={handleInputChange}\n                  validations={[required,vcode_postal]}\n                  name=\"code_postal\"\n                />\n                )}\n              </div>\n             \n              <div className=\"form-group\">\n                \n                <label htmlFor=\"title\">syndicat</label>\n                <Multiselect\n                    displayValue=\"NOM\"\n                    groupBy=\"TYPE\"\n                    value=\"4\"\n                    isObject={true}\n                    selectedValues={console.log}\n                    onChange={console.log}\n                    id={console.log}\n                    onNOMPressFn={function noRefCheck(){}}\n                    onRemove={function noRefCheck(){}}\n                    onSearch={function noRefCheck(){}}\n                    onSelect={land}\n                    options={liste}\n                    showCheckbox\n                  />\n                \n              </div>\n             \n              <div className=\"form-group\">\n                <label htmlFor=\"title\">observation</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  defaultValue=\"Thierry\"\n                  value={Societe.observation}\n                  onChange={handleInputChange}\n                  validations={[required,vobservation]}\n                  name=\"observation\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">telephone Societes</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={Societe.tel}\n                  onChange={handleInputChange}\n                  validations={[required,vtel]}\n                  name=\"tel\"\n                />\n              </div>\n             \n              \n              <select  validations={[required,vid_role]}  value={Societe.id_role} onChange={handleInputChange} name=\"id_role\" >\n                <option>select une valeur</option>\n                <option value=\"1\">cemeca</option>\n                <option value=\"2\">sofitech</option>\n              </select>\n             \n              <button  className=\"btn btn-success\">\n                Submit\n              </button>\n             \n\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={\n                  successful\n                    ? \"alert alert-success\"\n                    : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n          </Form>\n\n        </div>\n\n  );\n};\n\nexport default AddTutorial;\n","import axios from \"axios\";\n\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\n\n\nclass AuthAction {\n\n\n  create(data){\n    return axios.post(API_URL + \"interlocuteur\", data);\n  }\n \n\n  findAll(){\n    return axios.get(API_URL + \"interlocuteur\");\n\n  };\n \n\n \n}\n\nexport default new AuthAction();\n","import React, { useState, useRef ,useEffect} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthAction from \"../services/Interlocuteur\";\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport axios from 'axios';\n//table class\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nconst Action = (props) => {\n\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const form = useRef();\n    const checkBtn = useRef();\n    const [ID_societe,setID_societe] = useState([]);\n    useEffect(()=>{\n      retrieveTutorials();\n      const user = AuthService.getCurrentUser();\n          if (user){\n                 //afficher cemca\n          UserService.getCemecaBoard().then(\n              response => {\n                  axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\n                    setID_societe(response.data);\n                  })\n              },\n            );\n             //afficher cemca\n          UserService.getSofitechBoard().then(\n              response => {\n                  axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\n                    setID_societe(response.data);\n                  })\n              },\n  \n            );\n            \n          }\n   },[]) \n// Get ID from URL\nconst params = useParams();\nvar nb=parseInt(params.id);\nconst actItem =ID_societe.filter(task=>task.siret===nb)\nconsole.log(actItem)\n//inntial user state\nconst user = AuthService.getCurrentUser()\n//intitial Action \n    const initialState = {\n    nom:\"\",\n    prenom: \"\",\n    email:\"\",\n    adresse: \"\",\n    code_postale: \"\",\n    tel: \"\",\n    activite: \"\", \n    id_soc: \"\",\n    };\n\n  const [Interlocuteur, setInterlocuteur] = useState({initialState});\n  const [listeinter ,Setlisteinter] = useState([]);\n\n  const retrieveTutorials = () => {\n    AuthAction.findAll()\n      .then((response) => {\n        Setlisteinter(response.data);\n       \n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  console.log(listeinter.data)\n  \n  const saveAction = (e) => {\n  \n    var data = {\n      nom:Interlocuteur.nom,\n      prenom:Interlocuteur.prenom,\n      email:Interlocuteur.email,\n      adresse: Interlocuteur.adresse,\n      code_postale:Interlocuteur.code_postale,\n      tel:Interlocuteur.tel,\n      fonction_inter:Interlocuteur.fonction_inter,\n      id_soc:nb,\n    };\n  \n    e.preventDefault();\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthAction.create(data)\n        .then(response => {\n        setInterlocuteur({\n           nom:response.data.nom,\n           prenom: response.data.prenom,\n           email: response.data.email,\n           adresse: response.data.adresse,\n           code_postale: response.data.code_postale,\n           tel: response.data.tel,\n           fonction_inter: response.data.fonction_inter,\n           id_soc: response.data.id_soc,\n          }\n          );\n          setSuccessful(true);\n          setMessage(response.data.message)\n        },\n        error => {\n          const resMessage =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      setMessage(resMessage);\n        }\n        )\n        .catch(e => {\n          console.log(e);\n\n        });\n    }\n};\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setInterlocuteur({ ...Interlocuteur, [name]: value });\n\n};\n\n    return (\n        <div className=\"col-md-12\">\n  \n          <h1>\n            Ajouter un interlocuteur\n          </h1>\n   \n    \n   {/* ajouter un user */}\n   <div className=\"card card-container\">\n          \n            liste interlocuteur \n            <TableContainer component={Paper}>\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                        <TableHead>\n                                        <TableRow>\n                                            <TableCell>nom</TableCell>\n                                            <TableCell align=\"right\">prenom</TableCell>\n                                            <TableCell align=\"right\">fonction</TableCell>\n                                            <TableCell align=\"right\">adresse postal</TableCell>\n                                            <TableCell align=\"right\">telephone</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                      \n                                        </TableBody>\n                                    </Table>\n              </TableContainer>\n            <Form onSubmit={saveAction} ref={form}>\n                {!successful && (\n                    <div>\n                       <div className=\"form-group\">\n                        <label htmlFor=\"username\">nom</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"nom\"\n                          value={Interlocuteur.nom}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n    \n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">prenom</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"prenom\"\n                          value={Interlocuteur.prenom}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">email</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"email\"\n                          value={Interlocuteur.email}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">adresse</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"adresse\"\n                          value={Interlocuteur.adresse}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"username\">code postal</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"code_postale\"\n                          value={Interlocuteur.code_postale}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>\n      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">tel</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"tel\"\n                          value={Interlocuteur.tel}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>        \n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">fonction</label>\n                        <Input\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"fonction_inter\"\n                          value={Interlocuteur.fonction_inter}\n                          onChange={handleInputChange}\n                          \n                        />\n                      </div>    \n                     \n                     \n\n                    \n\n                      <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\">Valider l'action</button>\n                      </div>\n                    </div>\n                  )}\n\n                  {message && (\n                    <div className=\"form-group\">\n                      <div\n                        className={\n                          successful\n                            ? \"alert alert-success\"\n                            : \"alert alert-danger\"\n                        }\n                        role=\"alert\"\n                      >\n                        {message}\n                      </div>\n                    </div>\n                  )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n              </Form>\n          </div> \n          </div>\n      );\n    }\n    export default Action;\n  \n  ","import React,{useEffect,useState} from 'react'\nimport axios from 'axios';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport UserService from \"../services/user.service\";\nimport interService from \"../services/Interlocuteur\"\nimport AuthService from \"../services/auth.service\";\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction Customersinfo () {\n  //lister la societe selon l'id \n  const[ListSociete,SetSociete]=useState([]);\n  //les interlocuteur de la societes selon l'id \n  const[listInter,SetInter]=useState([]);\n  // Get ID from URL\n  const params = useParams(); \n  var nb=parseInt(params.id);\n  //FILTER  INTERLOCUTEUR WHERE ID SOCIETES \n  const id_soc =listInter.filter(task=>task.id_soc===nb)\n  //GET USER INFO\n  const user = AuthService.getCurrentUser()\n   //SELECT ALL SOCIETES WHERE AUTH\n   const retrieveTutorials = () => {\n    if(user){\n      interService.findAll().then(\n        response => {\n            axios.get(\"http://localhost:8080/api/auth/interlocuteur\").then((response)=>{\n              SetInter(response.data);\n              console.log(response.data);\n            })\n        },\n\n      )\n\n          \n        \n      //afficher cemca\n      UserService.getCemecaBoard().then(\n          response => {\n              axios.get(\"http://localhost:8080/cemeca\").then((response)=>{\n                SetSociete(response.data);\n              })\n          },\n\n        );\n        //afficher sofitech\n      UserService.getSofitechBoard().then(\n          response => {\n              axios.get(\"http://localhost:8080/sofitech\").then((response)=>{\n                SetSociete(response.data);\n              })\n          },\n    \n\n          \n        );\n\n  }\n  };  \n  //FILTER SOCIETES SELON L'ID \n  const actItem =ListSociete.filter(task=>task.siret===nb)\n  useEffect(() =>{\n    retrieveTutorials()\n  },[]);\n\n\n//CARD TABLE \n  const card = (\n    <React.Fragment>\n      {actItem.map((e)=>\n     \n      <CardContent>\n         <Typography variant=\"h5\" component=\"div\">\n         <i class='bx bxs-bank danger'></i>: {e.nom_soc}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          siret : {e.siret}\n        </Typography>\n        <Typography variant=\"body2\">\n         siren : {e.siren}\n        </Typography>\n        \n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          date de creation : {e.date_creation_soc}\n        </Typography>\n        <Typography variant=\"body2\">\n         date enregistré : {e.createdAt}\n        </Typography>\n        <Typography variant=\"body2\">\n          description:{e.observation}\n\n        </Typography>\n        <Typography variant=\"body2\">\n          code naf : {e.activite_soc}\n\n        </Typography>\n        <Typography variant=\"body2\">\n          nom résponsable : {e.nom_responsable_soc}\n\n        </Typography>\n\n        <Typography variant=\"body2\">\n        adresse postal  : {e.adresse_local} {e.ville_soc} {e.code_postal} \n          \n         \n        </Typography>\n        <Typography variant=\"body2\">\n        syndicat : {e.syndicat}\n\n        </Typography>\n        <Typography variant=\"body2\">\n        observation : {e.observation}\n\n        </Typography>\n        <Typography variant=\"body2\">\n        telephone : {e.tel}\n\n        </Typography>\n\n        <Typography variant=\"body2\">\n        les interlocuteurs ratacher a cette societe\n        {\n          id_soc.map((item, index) => (\n             <Typography variant=\"body2\"key={index}>\n                 <i class='bx bxs-user'></i> {item.nom}                                \n              </Typography>\n              ))\n        }\n        </Typography>\n    \n       \n      </CardContent>\n       )}\n      <CardActions>\n        <Button size=\"small\">modification</Button>\n      </CardActions>\n    </React.Fragment>\n  );\n  return (\n    <Box sx={{ minWidth: 275 }}>\n      <Card variant=\"outlined\">{card}</Card>\n    </Box>\n  );\n}\n\nexport default Customersinfo\n","import React from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Customers from '../pages/Customers'\nimport Register from '../pages/Register'\nimport Login from '../pages/Login'\nimport Action from '../pages/Action'\nimport Ajouter from '../pages/Ajouter'\nimport AuthService from \"../services/auth.service\";\nimport Interlocuteur from '../pages/Interlocuteur'\nimport  CustomerInfo from '../pages/CustomerInfo'\nconst Routes = () => {\n    const user = AuthService.getCurrentUser();\n    return (\n        <Switch>\n            <Route path='/' exact component={Dashboard}/>\n            {user? <Route path='/Action/:id' component={Action}/>: null }\n            <Route path='/Societes' component={Customers}/>\n            <Route path='/Societe/:id' component={CustomerInfo}/>\n            <Route path='/Interlocuteur/:id' component={Interlocuteur}/>\n            <Route path='/ajouter' component={Ajouter}/>\n            <Route path='/register' component={Register}/>\n            <Route path='/Login' component={Login}/>\n            <Route path='/Interlocuteur' component={Interlocuteur}/>\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, {useEffect} from 'react'\n\nimport './layout.css'\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\nimport Routes from '../routes'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst Layout = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\n\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\n\n        dispatch(ThemeAction.setMode(themeClass))\n\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n            <Route render={(props) => (\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                    <Sidebar {...props}/>\n                    <div className=\"layout__content\">\n                        <TopNav/>\n                        <div className=\"layout__content-main\">\n                            <Routes/>\n                        </div>\n                    </div>\n                </div>\n            )}/>\n        </BrowserRouter>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals'\n\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\n\nimport rootReducer from './redux/reducers'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './assets/css/grid.css'\nimport './assets/css/theme.css'\nimport './assets/css/index.css'\n\nimport Layout from './components/layout/Layout'\n\nconst store = createStore(\n  rootReducer\n)\n\ndocument.title = 'CRM SOFITECH/CEMECA'\n\nReactDOM.render(\n  <Provider store={store}>\n\n      <Layout />\n\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}